# Generated by Django 4.1.2 on 2023-07-10 12:49

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('sequences', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, default=list, size=None)),
                ('st', models.PositiveIntegerField()),
                ('cluster_number', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('sequences', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, default=list, size=None)),
                ('distances', models.JSONField(blank=True, default=dict)),
                ('always_calculate_dm', models.BooleanField(default=False)),
                ('dm_status', models.CharField(choices=[('NODATA', 'No data'), ('PENDING', 'Pending'), ('VALID', 'Valid'), ('ERROR', 'Request was unsuccesful'), ('OBSOLETE', 'Obsolete')], default='NODATA', max_length=15)),
                ('data_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), blank=True, default=list, size=None)),
                ('field_data', models.JSONField(blank=True, default=dict)),
                ('microreact_project', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'ordering': ['-pk'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComparisonTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cgmlst', 'cgMLST'), ('snp', 'SNP')], default='cgmlst', max_length=8)),
                ('name', models.CharField(max_length=20)),
                ('version', models.CharField(max_length=8)),
                ('status', models.CharField(choices=[('testing', 'Testing'), ('accredited', 'Accredited'), ('unavailable', 'Unavailable')], default='testing', max_length=11)),
                ('execution_model', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('direct', 'Direct'), ('mongodb_queue', 'MongoDB Queue')], max_length=13), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('code', models.CharField(max_length=2, unique=True)),
            ],
            options={
                'verbose_name_plural': 'species',
            },
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_type', models.CharField(choices=[('single', 'Single'), ('complete', 'Complete'), ('average', 'Average')], default='single', max_length=10)),
                ('newick', models.TextField(default='()')),
                ('comparison', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='comparisons.comparison')),
            ],
        ),
        migrations.CreateModel(
            name='PotentialOutbreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('suspected_source', models.CharField(max_length=30)),
                ('outbreak_id', models.IntegerField(blank=True, null=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comparisons.cluster')),
                ('comparison', models.ManyToManyField(to='comparisons.comparison')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='comparisontool',
            constraint=models.UniqueConstraint(fields=('name', 'version'), name='tool_name_version_unique'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comparison',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comparisons.species'),
        ),
        migrations.AddField(
            model_name='comparison',
            name='tool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comparisons.comparisontool'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cluster',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='comparisons.species'),
        ),
        migrations.AddConstraint(
            model_name='cluster',
            constraint=models.UniqueConstraint(fields=('species', 'st', 'cluster_number'), name='species_st_clusternumber_unique'),
        ),
    ]
